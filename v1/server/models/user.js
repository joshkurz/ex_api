// Generated by CoffeeScript 1.3.3
(function() {
  var ObjectId, Schema, crypto, hash, mongoose, schema, uuid;

  mongoose = require("mongoose");

  crypto = require("crypto");

  uuid = require("node-uuid");

  Schema = mongoose.Schema;

  ObjectId = Schema.ObjectId;

  schema = new Schema({
    name: {
      type: String,
      required: true,
      unique: true
    },
    email: {
      type: String,
      required: true
    },
    salt: {
      type: String,
      required: true,
      "default": uuid.v1
    },
    passwdHash: {
      type: String,
      required: true
    }
  });

  hash = function(passwd, salt) {
    return crypto.createHmac("sha256", salt).update(passwd).digest("hex");
  };

  schema.methods.setPassword = function(passwordString) {
    return this.passwdHash = hash(passwordString, this.salt);
  };

  schema.methods.validatePassword = function(passwordString) {
    return this.passwdHash === hash(passwordString, this.salt);
  };

  mongoose.model("User", schema);

  module.exports = mongoose.model("User");

  exports.User = mongoose.model("User");

}).call(this);
