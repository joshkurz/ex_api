// Generated by CoffeeScript 1.3.3
(function() {
  var User, should;

  User = require("../../server/models/user");

  should = require("should");

  describe("given a user", function() {
    var user;
    user = null;
    beforeEach(function() {
      return user = new User();
    });
    it("should have a default salt value", function() {
      return should.exist(user.salt);
    });
    describe("when you create another user", function() {
      var user2;
      user2 = null;
      beforeEach(function() {
        return user2 = new User();
      });
      return it("should not have the same salt value as the previous user", function() {
        return user.salt.should.not.equal(user2.salt);
      });
    });
    return describe("when you set the password", function() {
      beforeEach(function() {
        return user.setPassword("my_password");
      });
      it("should not contain the password value in passwdHash", function() {
        return user.passwdHash.should.not.equal("my_password");
      });
      describe("when you validate the password with the correct value", function() {
        return it("should return true", function() {
          return user.validatePassword("my_password").should.be["true"];
        });
      });
      return describe("when you validate the password with an invalid value", function() {
        return it("should return false", function() {
          return user.validatePassword("something_else").should.be["false"];
        });
      });
    });
  });

}).call(this);
